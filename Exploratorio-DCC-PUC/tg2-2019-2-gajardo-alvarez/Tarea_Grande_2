{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Tarea Grande 2.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/joaquin-alvarez21/joaquin.alvarez/blob/master/Exploratorio-DCC-PUC/tg2-2019-2-gajardo-alvarez/Tarea_Grande_2\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "gDfo9eo_-tyi",
        "colab_type": "text"
      },
      "source": [
        "# Parte 1"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Fl-3wBWdXvpf",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "from sklearn import preprocessing\n",
        "datos = pd.read_csv('adult_dataset.csv')\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "uFl4D_mbX7Kw",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "columnas_utiles = [\"Age\", \"Workclass\", \"FNLWGT\", \"Education_Num\", \"Capital_Gain\", \"Capital_Loss\", \"Hours_per_Week\", \"Target\"]\n",
        "datos_usados = datos.loc[:, columnas_utiles]\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "tbtyIWeQYgwS",
        "colab_type": "text"
      },
      "source": [
        "Se elimino la columna ID, ya que no nos da ningún tipo de información respecto al general de los individuos, Workclass, ya que esa misma información es encunetra en Ocupation, Education, puesto que la columna Education_num incluye esa información y de forma más específica, Marital_Status, ya que el estado civil de un individuo no afecta su sueldo, Relationship, por la misma razón del anterior, Sex, puesto que el genero de una persona no influye en cuanto esta debería ganar, Hours_per_Week y FNLWGT, puesto que es una columna con solo datos Nan, por lo que sería inutil tratar de llenarla ya que sería simular con datos falsos, y por último el país del que proviene no tiene relevancia, a diferencia del país en el que trabaja que sería util."
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "NjnzJVmAYkni",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "datos_usados = datos_usados[datos_usados['Target'] != np.NaN]\n",
        "datos_usados.drop([\"FNLWGT\", \"Hours_per_Week\"], axis=1, inplace = True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HqOKhgwaYC0g",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "datos_usados['Workclass'].replace([np.NaN],['Private'], inplace = True)\n",
        "\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "IRv3It4IerUz",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "datos_usados = datos_usados[datos_usados['Education_Num']!= np.NaN]\n",
        "datos_usados ['Capital_Gain'].replace([np.NaN],[0],inplace = True)\n",
        "datos_usados ['Capital_Loss'].replace([np.NaN],[0],inplace = True)"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "Njqxc-Abe177",
        "colab_type": "text"
      },
      "source": [
        "Se eliminaron todas las filas que tenían NaN en su valor asociado al Target, como al Education_Num , puesto que el primero no podemos aproximarlo de ninguna forma que no alteremos el resultado, mientras que en Education_Num al ser pocos los que tenían NaN, no conforman algo importante en el resultado, mientras que en Capital_Gain, Capital_Loss y Workclass usamos la moda como termino de uso. Por otra parte vamos a cambiar lo terminos de workclass según un número descrito abajo"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HW8ixI43bxIc",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "workclass = {\"1\" : \"State-gov\",\n",
        "             \"2\" : \"Self-emp-not-inc\",\n",
        "             \"3\" : \"Private\",\n",
        "             \"4\" : \"Federal-gov\",\n",
        "             \"5\" : \"Local-gov\",\n",
        "             \"6\" : \"Self-emp-inc\",\n",
        "             \"7\" : \"Never-worked\",\n",
        "             \"8\" : \"Without-pay\"}"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "8cacEBYpc22r",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "for key in workclass:\n",
        "  datos_usados['Workclass'].replace([workclass[key]], key, inplace = True)\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "nioyGSe-5PtE",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "datos_generales = datos_usados.loc[:, datos_usados.columns != 'Target']\n",
        "datos_target = datos_usados.loc[:, datos_usados.columns == 'Target']"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "lggyGhPVyLVr",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "min_max_scaler = preprocessing.MinMaxScaler()\n",
        "datos_reescalados = min_max_scaler.fit_transform(datos_generales)\n",
        "datos_generales = pd.DataFrame(datos_reescalados, columns = datos_generales.columns) "
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "jJeR2jLW-4HH",
        "colab_type": "text"
      },
      "source": [
        "#Parte 2"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "YJQxLl807N5F",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        "base_estudio = datos_generales.loc[0:34188,:]\n",
        "base_prueba = datos_generales.loc[34189:,:]\n",
        "\n",
        "target_estudio = datos_target.loc[0:34188,:]\n",
        "target_prueba = datos_target.loc[34189:,:]\n"
      ],
      "execution_count": 0,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vPkkr8eF-Ab7",
        "colab_type": "code",
        "colab": {}
      },
      "source": [
        ""
      ],
      "execution_count": 0,
      "outputs": []
    }
  ]
}